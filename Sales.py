# -*- coding: utf-8 -*-
"""sales.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AxHHcaJARv1oFGKjRifUKPHhZTak3RSz

# Sales  prediction using  Linear Regression
"""

pip install datasets

from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import metrics
from sklearn.metrics import mean_squared_error

from sklearn.impute import SimpleImputer
from datasets import load_dataset

data = pd.read_csv("/content/Dummy Data HSS.csv")



data.head()



data.shape

data.describe()

data.dtypes

data.isnull().sum()



data.drop(['Influencer'],axis=1,inplace=True)

data = data.fillna(data.mean())

data

data.isnull().sum()

plt.figure(figsize=(10,6))
sns.heatmap(data.corr(),annot=True)

sns.pairplot(data,diag_kind='kde')

data.hist(figsize=(10,10))
plt.show()

x=data.drop(['Sales'],axis=1)
y=data['Sales']
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)

replace_=SimpleImputer(missing_values=0,strategy='mean')
x_train=replace_.fit_transform(x_train)
x_test=replace_.fit_transform(x_test)

x_train

data.isnull().sum()



lr=LinearRegression()
lr.fit(x_train,y_train)

pre=lr.predict(x_test)
pd.DataFrame(pre)

pre.shape

model_score=lr.score(x_test,y_test)
model_score

lr.score(x_train,y_train)

print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, pre))


print('Mean Squared Error:', mean_squared_error(y_test, pre))


print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, pre)))

y_grid=(np.column_stack([y_test,pre]))

pd.DataFrame(y_grid)






sns.regplot(x=y_test, y=pre)
plt.show()

